version: '3.8'

services:
  source_db:
    image: postgres:13
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    command:
      - "postgres"
      - "-c"
      - "max_connections=500"
      - "-c"
      - "shared_buffers=2GB"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - ./init_source.sql:/docker-entrypoint-initdb.d/init.sql
      - source_data:/var/lib/postgresql/data
  dest_db:
    image: postgres:13
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - ./init_dest.sql:/docker-entrypoint-initdb.d/init.sql
      - dest_data:/var/lib/postgresql/data

  redis:
    image: redis:6

  worker:
    build: .
    command:
      - celery
      - -A
      - worker.app
      - worker
      - --loglevel=info
      - --concurrency=4
    environment:
      SOURCE_DB_URL: postgresql://postgres:postgres@source_db:5432/postgres
      DEST_DB_URL: postgresql://postgres:postgres@dest_db:5432/postgres
      REDIS_URL: redis://redis:6379/0
    depends_on:
      - source_db
      - dest_db
      - redis
    deploy:
      replicas: 4

  scheduler:
    build: .
    command: python scheduler.py
    environment:
      SOURCE_DB_URL: postgresql://postgres:postgres@source_db:5432/postgres
      DEST_DB_URL: postgresql://postgres:postgres@dest_db:5432/postgres
      REDIS_URL: redis://redis:6379/0
    depends_on:
      - source_db
      - redis

  validator:
    build: .
    command: python validate.py
    environment:
      SOURCE_DB_URL: postgresql://postgres:postgres@source_db:5432/postgres
      DEST_DB_URL: postgresql://postgres:postgres@dest_db:5432/postgres
    depends_on:
      - source_db
      - dest_db
volumes:
  source_data:
  dest_data: